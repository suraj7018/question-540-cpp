// User function Template for C++

class Solution{
public:
    bool solve(int index, int N, int arr[], int target, vector<vector<int>> &dp){
        // base case
        if(target < 0)
        return 0;
        
        if(target == 0)
        return 1;
        
        if(index >= N)
        return 0;
        
        if(dp[index][target] != -1)
        return dp[index][target];
        
        bool include = solve(index +1, N, arr, target - arr[index], dp);
        bool exclude = solve(index+1, N, arr, target, dp);
        
        return dp[index][target] = include or exclude;
    }
    
    int equalPartition(int N, int arr[])
    {
       int total = 0;
       for(int i=0;i<N;i++){
           total = total+arr[i];
       }
       if(total & 1)
       return 0;
       
       int target = total/2;
       vector<vector<int>>dp(N, vector<int>(target+1, -1));
       return solve(0,N, arr, target, dp);
    }
};
