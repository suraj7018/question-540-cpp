class Solution {
  public:
    int solve(string s, string t, int i, int j, vector<vector<int>> &dp){
        // base case;
        if(i == s.size())
        return t.size() - j;
        
        if(j == t.size())
        return s.size() - i;
        
        if(dp[i][j] != -1)
        return dp[i][j];
        
        if(s[i] == t[j])
        {
            return solve(s, t, i+1, j+1, dp);
        }
        else{
            // insert;
            int insertans = 1+solve(s, t, i, j+1, dp);
            //remove;
            int removeans = 1+solve(s, t, i+1, j, dp);
            // replace;
            int replaceans = 1+solve(s, t, i+1, j+1, dp);
            
            dp[i][j]  = min(insertans, min(removeans, replaceans));
        }
        return dp[i][j];
    }
    int editDistance(string s, string t) {
        int n = s.size();
        int m = t.size();
       vector<vector<int>> dp(n+1, vector<int> (m+1, -1));
       return solve(s, t, 0, 0, dp);
    }
};
