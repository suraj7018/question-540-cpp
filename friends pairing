class Solution {
public:
    const int MOD = 1e9 + 7;

    long long int solve(int n, vector<long long int> &dp) {
        // Base cases
        if (n == 1) return 1;
        if (n == 2) return 2;
        if (dp[n] != -1) return dp[n];

        long long int notpaired = solve(n - 1, dp) % MOD;
        long long int paired = (n - 1) * (solve(n - 2, dp) % MOD) % MOD;

        return dp[n] = (paired + notpaired) % MOD;
    }

    long long int countFriendsPairings(int n) {
        vector<long long int> dp(n + 1, -1);
        return solve(n, dp);
    }
};
