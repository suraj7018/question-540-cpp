class Solution
{
	public:
	
	void dfstopo(int v, vector<int> adj[], vector<bool> &visited, stack<int> &s){
	    visited[v] = true;
	    
	    for(auto j : adj[v]){
	        if(!visited[j]){
	            dfstopo(j, adj, visited, s);
	        }
	    }
	    s.push(v);
	}
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<bool> visited(V);
	    stack<int> s;
	    
	    for(int i = 0; i<V; i++){
	        if(!visited[i]){
	            dfstopo(i, adj, visited, s);
	        }
	    }
	    
	    vector<int> ans;
	    while(!s.empty()){
	        ans.push_back(s.top());
	        s.pop();
	    }
	    return ans;
	}
};
